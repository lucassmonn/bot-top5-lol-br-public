var Twit = require('twit');
const kayn = require('./config/lol');
var emoji = require('node-emoji');
var express = require('express');
const { Kayn } = require('kayn');
var app = express();

app.set('port', (process.env.PORT || 5000));

var T = new Twit(require('./config/keys_t.js'));

var stream = T.stream('statuses/filter', { track: '!!top5br' });
var streamElo = T.stream('statuses/filter', { track: '!!elo' });
var streamLike = T.stream('statuses/filter', { track: '#CBLoL' });


var total = 0;
var totalLike = 0;

console.log('Bot iniciando...')

stream.on('tweet', function (tweet) {
  if (tweet.text.substring(0, 2) != 'RT') {

    kayn.Challenger.list('RANKED_SOLO_5x5').then(list => {
      let sortList = (list.entries.sort(compare));

      var lista = [];
      var listNumbers = ['one', 'two', 'three', 'four', 'five'];
      let ultimo = 199;
      for (var i = 0; 5 > i; i++) {
        lista.push(sortList[ultimo])
        ultimo = ultimo - 1;
      }

      var msg = `${emoji.get('star')} TOP 5 SOLOQ BR ${emoji.get('star')}  \n\n`;

      for (var i = 0; i < lista.length; i++) {
        msg += `${emoji.get(listNumbers[i])} ${lista[i].summonerName} com ${lista[i].leaguePoints} pontos\n\n`
      }

      var nameID = tweet.id_str;

      var name = tweet.user.screen_name;

      T.post('statuses/update', { in_reply_to_status_id: nameID, status: '@' + name + ' ' + msg }, function (err, data, response) {
        total++;
        console.log('Tweet feito para o usuário @' + name + '. Total de: ' + total)
      })
    }).catch(err => {
      console.log(err);
    })


  }
});

streamElo.on('tweet', function (tweet) {
  if (tweet.text.substring(0, 2) != 'RT') {

    var nameID = tweet.id_str;

    var name = tweet.user.screen_name;

    console.log('achou');
    
    kayn.Summoner.by.name('LUCÃ0').then(data => {
      kayn.League.Entries.by.summonerID(data.id).then(league => {

        var filter = league.filter(function (obj) { return obj.queueType == 'RANKED_SOLO_5x5'; })
        var elo = `Atualmente está ${filter[0].tier} ${filter[0].rank}`

        T.post('statuses/update', { in_reply_to_status_id: nameID, status: '@' + name + ' ' + elo }, function (err, data, response) {
          total++;
          console.log('Tweet feito para o usuário @' + name + '. Total de: ' + total)
        })

      })
    }).catch(err => {
      msg = 'O jogador não foi encontrado!'
      T.post('statuses/update', { in_reply_to_status_id: nameID, status: '@' + name + ' ' + msg }, function (err, data, response) {
        total++;
        console.log('Tweet feito para o usuário @' + name + '. Total de: ' + total)
      })
    })

  }
});

function compare(a, b) {
  const A = a.leaguePoints;
  const B = b.leaguePoints;

  let comparison = 0;
  if (A > B) {
    comparison = 1;
  } else if (A < B) {
    comparison = -1;
  }
  return comparison;
}

app.listen(8080);

streamLike.on('tweet', function (tweet) {
  var nameID = tweet.id_str;
  T.post('favorites/create', { id: nameID }, function (err, data, response) {
    totalLike++
    console.log(`Total de likes no #CBLoL: ${totalLike}.`)
  })
})

